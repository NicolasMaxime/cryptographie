Nicolas Maxime

Compte rendu cryptographie

Question 1
	Le langage choisit est le C, la librairie utilisée permetant de gérer des nombres entiers de grande taille est GMP. (libgmp)
	La bibliothèque permet de générer de grand nombre aléatoire, determiner si un nombre est premier ou non, faire des :
	multiplications, additions, soustractions, divisions, congruences, tests de divisibilité (savoir si d divise n), calculs exponentielles, 
	racines carrés, puissances, ainsi que des opérations logiques (and, or, xor, ...).
	
Question 2


Question 3
	On utilise le test de primalité de Miller-Rabin.
	Un test probabilistes est un test qui s'autorise une certaine marge d'erreur et par conséquent qui ne donne pas forcément 
	une réponse juste.
	Sous GMP, la fonction  int mpz_probab_prime_p (const mpz_t n, int reps) permet de faire ce test.
	
Question 4 :
	Sous gmp la fonction mpz_powm permet de faire ceci.


Question 7:
    Une fonction de hachage cryptographiquement sûr est une fonction qui doit:
     - Etre rapide à utiliser.
     - Résister à la colision: c'est dur ( en 2^(nombres de bit/2) ) de trouver x' différent de x tel que H(x) = H(x')
     - Résister à la préimage: c'est dur ( en 2^nombres de bit ) de trouver un x tel que H(x)=y
     - Résister à la 2nd préimage: soit un x donné, c'est dur ( en 2^nombres de bit ) de trouver x' différent de x tel que H(x) = H(x')

    Etant donnée que la sortie fait au moins 256bits on peut utiliser au minimum SHA-256, on peut aussi utiliser SHA-512 ou SHA-3
    Une librairie qui permet l'utilisation d'une fonction de hachage en C est sha de openssl